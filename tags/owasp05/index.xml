<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OWASP05 on WebSec Seminar Blog</title>
    <link>https://websecseminar.github.io/tags/owasp05/</link>
    <description>Recent content in OWASP05 on WebSec Seminar Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://websecseminar.github.io/tags/owasp05/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CVE-2015-1819</title>
      <link>https://websecseminar.github.io/posts/team_sadlittleunicorn_cve-2015-1819/</link>
      <pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://websecseminar.github.io/posts/team_sadlittleunicorn_cve-2015-1819/</guid>
      <description>Einführung CVE-2015-1819 beschreibt eine Sicherheitslücke, die in vielen XML-Parsern vorhanden war und durch die fehlende Absicherung gegen rekursiv definierte XML-Dokumente definiert wurde. Diese Lücke ermöglichte es dank des stark erhöhten Hauptspeicheraufwands, der durch das Parsen der XML-Dokumente entsteht, denial of service (DoS)-Angriffe auf die betroffenen Systeme auszuführen. Die Sicherheitslücke lässt sich ohne viele Kenntnisse ausnutzen und bietet abgesehen von der Auswirkung auf die Performance des Systems keine Möglichkeit Daten oder das System zu kompromittieren.</description>
    </item>
    
    <item>
      <title>OWASP05 - Security Misconfiguration</title>
      <link>https://websecseminar.github.io/posts/owasp_5_team_sadlittleunicorn/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://websecseminar.github.io/posts/owasp_5_team_sadlittleunicorn/</guid>
      <description>Einführung Den 5. Platz der von OWASP benannten kritischsten Sicherheitsrisikos von Webanwendungen belegt die „Security Misconfiguration&amp;quot;. Die Security Misconfiguration beschreibt die Fehlkonfiguration von Anwendungen, die im Application-Stack einer Web-Anwendung liegen, das kann z.B. eine Datenbank oder der Webserver sein. Vor allem beim nicht deaktiviertem oder neu konfigurierten Default-Account ist diese Schwachstelle sehr einfach ausnutzbar. Dieses Risiko ist über die letzten Jahre präsenter geworden, ein Grund dafür ist der vermehrte Wechsel in stark konfigurierbare Anwendungen.</description>
    </item>
    
  </channel>
</rss>
